{"ast":null,"code":"import _defineProperty from \"/Users/Dev/Desktop/Projects/banglez/steel-banglez/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBzoRaduQT7Gp827vTLN3vn_8nfg7IEsKo\",\n  authDomain: \"steel-banglez.firebaseapp.com\",\n  databaseURL: \"https://steel-banglez.firebaseio.com\",\n  projectId: \"steel-banglez\",\n  storageBucket: \"steel-banglez.appspot.com\",\n  messagingSenderId: \"816382404191\",\n  appId: \"1:816382404191:web:0938e5edaa3599f2019dea\",\n  measurementId: \"G-0DEREQ9JDV\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user, error.message');\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  promp: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/Dev/Desktop/Projects/banglez/steel-banglez/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","promp","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAE;AACVC,EAAAA,MAAM,EAAE,yCADE;AAEVC,EAAAA,UAAU,EAAE,+BAFF;AAGVC,EAAAA,WAAW,EAAE,sCAHH;AAIVC,EAAAA,SAAS,EAAE,eAJD;AAKVC,EAAAA,aAAa,EAAE,2BALL;AAMVC,EAAAA,iBAAiB,EAAE,cANT;AAOVC,EAAAA,KAAK,EAAE,2CAPG;AAQVC,EAAAA,aAAa,EAAE;AARL,CAAd;AAYA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAG,CAACD,QAAJ,EAAc;AACd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAGA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAqB;AAAA,UACVC,WADU,GACaT,QADb,CACVS,WADU;AAAA,UACGC,KADH,GACaV,QADb,CACGU,KADH;AAEjB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR;AACFJ,QAAAA,WADE;AAEFC,QAAAA,KAFE;AAGFC,QAAAA;AAHE,SAICV,cAJD,EAAN;AAMH,KAPD,CAOI,OAAOa,KAAP,EAAa;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACH;AACJ;;AAED,SAAOd,OAAP;AAEH,CAxBM;AA2BPb,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAGA,OAAO,MAAM4B,IAAI,GAAG7B,QAAQ,CAAC6B,IAAT,EAAb;AACP,OAAO,MAAMf,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMgB,QAAQ,GAAG,IAAI9B,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAhC;AAEP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config= {\n    apiKey: \"AIzaSyBzoRaduQT7Gp827vTLN3vn_8nfg7IEsKo\",\n    authDomain: \"steel-banglez.firebaseapp.com\",\n    databaseURL: \"https://steel-banglez.firebaseio.com\",\n    projectId: \"steel-banglez\",\n    storageBucket: \"steel-banglez.appspot.com\",\n    messagingSenderId: \"816382404191\",\n    appId: \"1:816382404191:web:0938e5edaa3599f2019dea\",\n    measurementId: \"G-0DEREQ9JDV\"\n    \n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if(!userAuth) return;\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\n    const snapShot = await userRef.get();\n\n\n    if(!snapShot.exists) {\n        const{ displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData    \n            })\n        }   catch (error){\n            console.log('error creating user, error.message')\n        }\n    }\n\n    return userRef;\n\n};\n\n\nfirebase.initializeApp(config);\n\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ promp: 'select_account' });\nexport const signInWithGoogle = ()  => auth.signInWithPopup(provider);\n\nexport default firebase;\n\n"]},"metadata":{},"sourceType":"module"}